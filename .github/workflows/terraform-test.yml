name: 'TerraformTest'

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform Test'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Use Azure Login Action to authenticate with Azure as a Service Principal
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Print Azure CLI version
    - name: Print Azure CLI Version
      run: az --version

    # Print Azure CLI Login Status
    - name: Azure CLI Login Status
      run: az account show

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Validate the files
    - name: Terraform Validate
      run: terraform validate
